function filepath = makeSectionwise(facedata, coilname, savepath)
% filepath = coilpath_to_sectionwise(facedata, coilname, savepath)
% 
% Takes data in facedata cell structure and writes contours to a
% comsol-readable sectionwise text file. Models can then import this file
% directly to their geometry, rather than loading each curve individually.
%
% ARR 2020.04.15

if ~exist('coilname','var') || isempty(coilname)
  coilname = 'autosection.txt';
end

if ~exist('savepath','var') || isempty(savepath)
  savepath = pwd;
end

coordinates = [];
elements = [];

for i=1:length(facedata)
%     facedata{i} = {x,y,Vm,M,contours};
    M = facedata{i}{4};
    contours = facedata{i}{5};
    for j = 1:length(contours)
        for k=1:length(contours{j})
            twocurve = contours{j}{k};
            threecurve = affineRestore(twocurve(1,:),twocurve(2,:),M);
            if isempty(coordinates)
                coordinates = threecurve';
                nstart = 0;
            else
                [nstart, ~] = size(coordinates);
                coordinates = cat(1,coordinates,threecurve');
            end
            nstart = nstart+1;
            [~,n] = size(threecurve);
            latest = cat(1,(nstart):(nstart+n-2),(nstart+1):(nstart+n-1))';
            if isempty(elements)
                elements = latest;
            else
                elements = cat(1,elements,latest);
            end
        end
    end
end

filepath = fullfile(savepath, coilname);

fileID = fopen(filepath,'wt');

fprintf(fileID, '%% Autogenerated Sectionwise Coil Path\n%%\n');
fprintf(fileID, '%% makeSectionwise.m by Austin Reid 2020-04-15\n%%\n');
fprintf(fileID, '%% Coordinates\n');

for i=1:(nstart+n-1)
    fprintf(fileID,'%f %f %f\n',coordinates(i,:));
end

fprintf(fileID, '%% Elements (lines)\n');
[n,~] = size(elements);
for i=1:n
    fprintf(fileID,'%d %d\n',elements(i,:));
end
    
%Other common conversion specifiers include '%d' for integers or '%s' for characters. fprintf reapplies the conversion information to cycle through all values of the input arrays in column order.

fclose(fileID);

end